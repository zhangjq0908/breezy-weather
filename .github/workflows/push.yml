name: Breezy Weather push CI

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Setup Android SDK
        run: |
          ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager "build-tools;29.0.3"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Set up Gradle and Build
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            assembleFreenetRelease
            assembleBasicRelease

      - name: Check for APK files
        run: |
          echo "Listing APK files after build:"
          find app/build/outputs/apk -name "*.apk" -exec ls -lh {} \;
      - name: Upload APKs as artifacts
        uses: actions/upload-artifact@v3
        with:
           name: APKs
           path: |
            app/build/outputs/apk/basic/release/app-basic-arm64-*.apk
            app/build/outputs/apk/freenet/release/app-freenet-arm64-*.apk

      - name: Add secrets to local.properties
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        run: |
          set -e
          echo "breezy.accu.key=$ACCU_WEATHER_KEY" >> local.properties
          echo "breezy.atmoaura.key=$ATMO_AURA_KEY" >> local.properties
          echo "breezy.baiduip.key=$BAIDU_IP_LOCATION_AK" >> local.properties
          echo "breezy.geonames.key=$GEO_NAMES_KEY" >> local.properties
          echo "breezy.mf.jwtKey=$MF_WSFT_JWT_KEY" >> local.properties
          echo "breezy.mf.key=$MF_WSFT_KEY" >> local.properties
          echo "breezy.openweather.key=$OPEN_WEATHER_KEY" >> local.properties
        env:
          ACCU_WEATHER_KEY: ${{ secrets.ACCU_WEATHER_KEY }}
          ATMO_AURA_KEY: ${{ secrets.ATMO_AURA_KEY }}
          BAIDU_IP_LOCATION_AK: ${{ secrets.BAIDU_IP_LOCATION_AK }}
          GEO_NAMES_KEY: ${{ secrets.GEO_NAMES_KEY }}
          MF_WSFT_JWT_KEY: ${{ secrets.MF_WSFT_JWT_KEY }}
          MF_WSFT_KEY: ${{ secrets.MF_WSFT_KEY }}
          OPEN_WEATHER_KEY: ${{ secrets.OPEN_WEATHER_KEY }}

      - name: Delete local.properties
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        run: rm local.properties

      - name: Save version tag in env
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        run: echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Sign APKs
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/basic/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Sign APKs (freenet)
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/freenet/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Check for Signed APK files
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        run: |
          echo "Listing signed APK files:"
          find app/build/outputs/apk -name "*-signed.apk" -exec ls -lh {} \;

      - name: Prepare APKs with checksums, archive mapping.txt file
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        run: |
          prepare_apk() {
            local dir=$1
            local variant=$2
            local apk_name=breezy-weather-${{ env.VERSION_TAG }}_$variant.apk
            mv $dir/*-signed.apk $apk_name
            sha256=$(sha256sum $apk_name | awk '{ print $1 }')
            echo "APK_${variant^^}_SHA256=$sha256" >> $GITHUB_ENV
          }
          prepare_apk app/build/outputs/apk/basic/release standard
          prepare_apk app/build/outputs/apk/freenet/release freenet
          tar -czvf mapping-${{ env.VERSION_TAG }}_standard.tar.gz --directory=app/build/outputs/mapping/basicRelease/ mapping.txt
          tar -czvf mapping-${{ env.VERSION_TAG }}_freenet.tar.gz --directory=app/build/outputs/mapping/freenetRelease/ mapping.txt


      - name: Create release
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'breezy-weather/breezy-weather'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: Breezy Weather ${{ env.VERSION_TAG }}
          body: |
            **Donâ€™t know which release to choose? Check [INSTALL instructions](https://github.com/breezy-weather/breezy-weather/blob/main/INSTALL.md).**

            ---

            ### Checksums
            | Flavor        | Variant     | SHA-256                                |
            |---------------|-------------|----------------------------------------|
            | Standard      | Universal   | ${{ env.APK_STANDARD_SHA256 }}         |
            | Free networks | Universal   | ${{ env.APK_FREENET_SHA256 }}          |
          files: |
            breezy-weather-${{ env.VERSION_TAG }}_standard.apk
            mapping-${{ env.VERSION_TAG }}_standard.tar.gz
            breezy-weather-${{ env.VERSION_TAG }}_freenet.apk
            mapping-${{ env.VERSION_TAG }}_freenet.tar.gz
          draft: true
          prerelease: false
